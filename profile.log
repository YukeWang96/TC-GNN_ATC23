==PROF== Connected to process 407448 (/home/yuke/anaconda3/envs/tcgnn-new/bin/python3.7)
TC_Blocks:	455410
Exp_Edges:	58292480
==PROF== Profiling "spmm_forward_cuda_kernel": 0%....50%....100% - 35 passes
Namespace(classes=22, dataset='amazon0505', dim=16, epochs=10, hidden=16, model='gcn', num_layers=2, single_kernel=True, sparsity=1)
Prep. (ms):	649.055
SpMM Validation:  False
========================
==PROF== Disconnected from process 407448
[407448] python3.7@127.0.0.1
  spmm_forward_cuda_kernel(const int *, const int *, const int *, const int *, const int *, int, int, int, const float *, float *), 2022-Feb-05 12:20:10, Context 1, Stream 7
    Section: GPU Speed Of Light Throughput
    ---------------------------------------------------------------------- --------------- ------------------------------
    DRAM Frequency                                                           cycle/nsecond                           9.47
    SM Frequency                                                             cycle/nsecond                           1.39
    Elapsed Cycles                                                                   cycle                        613,338
    Memory [%]                                                                           %                          54.28
    DRAM Throughput                                                                      %                           5.80
    Duration                                                                       usecond                         441.57
    L1/TEX Cache Throughput                                                              %                          56.43
    L2 Cache Throughput                                                                  %                           2.88
    SM Active Cycles                                                                 cycle                     589,689.09
    Compute (SM) [%]                                                                     %                          60.94
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   Compute and Memory are well-balanced: To reduce runtime, both computation and memory traffic must be reduced. 
          Check both the Compute Workload Analysis and Memory Workload Analysis sections.                               

    INF   The ratio of peak float (fp32) to double (fp64) performance on this device is 64:1. The kernel achieved 0% of 
          this device's fp32 peak performance and 0% of its fp64 peak performance. See the Kernel Profiling Guide       
          (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#roofline) for mode details on roofline      
          analysis.                                                                                                     

    Section: Compute Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Executed Ipc Active                                                         inst/cycle                           2.53
    Executed Ipc Elapsed                                                        inst/cycle                           2.44
    Issue Slots Busy                                                                     %                          63.35
    Issued Ipc Active                                                           inst/cycle                           2.53
    SM Busy                                                                              %                          63.35
    ---------------------------------------------------------------------- --------------- ------------------------------
          No compute pipeline is over-utilized.                                                                         

    Section: Memory Workload Analysis
    ---------------------------------------------------------------------- --------------- ------------------------------
    Memory Throughput                                                         Gbyte/second                          52.73
    Mem Busy                                                                             %                          46.10
    Max Bandwidth                                                                        %                          54.28
    L1/TEX Hit Rate                                                                      %                          28.72
    L2 Compression Success Rate                                                          %                              0
    L2 Compression Ratio                                                                                                0
    L2 Hit Rate                                                                          %                          99.88
    Mem Pipes Busy                                                                       %                          54.28
    ---------------------------------------------------------------------- --------------- ------------------------------

    WRN   The memory access pattern for global stores in L1TEX might not be optimal. On average, this kernel accesses   
          4.0 bytes per thread per memory request; but the address pattern, possibly caused by the stride between       
          threads, results in 8.0 sectors per request, or 8.0*32 = 256.0 bytes of cache data transfers per request.     
          The optimal thread address pattern for 4.0 byte accesses would result in 4.0*32 = 129.0 bytes of cache data   
          transfers per request, to maximize L1TEX cache performance.Check the Source Counters section for uncoalesced  
          global stores.                                                                                                
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for stores from L1TEX to L2 is not optimal. The granularity of an L1TEX request to  
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 2.5 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced stores and try to minimize how many cache lines need to be accessed per memory        
          request.                                                                                                      
    ----- --------------------------------------------------------------------------------------------------------------
    WRN   The memory access pattern for loads from L1TEX to L2 is not optimal. The granularity of an L1TEX request to   
          L2 is a 128 byte cache line. That is 4 consecutive 32-byte sectors per L2 request. However, this kernel only  
          accesses an average of 1.0 sectors out of the possible 4 sectors per cache line. Check the Source Counters    
          section for uncoalesced loads and try to minimize how many cache lines need to be accessed per memory         
          request.                                                                                                      

    Section: Scheduler Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    One or More Eligible                                                                 %                          63.38
    Issued Warp Per Scheduler                                                                                        0.63
    No Eligible                                                                          %                          36.62
    Active Warps Per Scheduler                                                        warp                          11.57
    Eligible Warps Per Scheduler                                                      warp                           1.20
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Warp State Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Warp Cycles Per Issued Instruction                                               cycle                          18.26
    Warp Cycles Per Executed Instruction                                             cycle                          18.27
    Avg. Active Threads Per Warp                                                                                       32
    Avg. Not Predicated Off Threads Per Warp                                                                        28.34
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   On average, each warp of this kernel spends 10.1 cycles being stalled waiting for sibling warps at a CTA      
          barrier. This represents about 55.1% of the total average of 18.3 cycles between issuing two instructions. A  
          high number of warps waiting at a barrier is commonly caused by diverging code paths before a barrier that    
          causes some warps to wait a long time until other warps reach the synchronization point. Whenever possible    
          try to divide up the work into blocks of uniform workloads. Use the Source View's sampling columns to         
          identify which barrier instruction causes the most stalls and optimize the code executed before that          
          synchronization point first.                                                                                  
    ----- --------------------------------------------------------------------------------------------------------------
    INF   Check the Source Counters section for the top stall locations in your source based on sampling data. The      
          Kernel Profiling Guide (https://docs.nvidia.com/nsight-compute/ProfilingGuide/index.html#sampling) provides   
          more details on each stall reason.                                                                            

    Section: Instruction Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Avg. Executed Instructions Per Scheduler                                          inst                     373,521.68
    Executed Instructions                                                             inst                    122,515,110
    Avg. Issued Instructions Per Scheduler                                            inst                     373,585.66
    Issued Instructions                                                               inst                    122,536,097
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Launch Statistics
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Size                                                                                                        128
    Function Cache Configuration                                                                  cudaFuncCachePreferNone
    Grid Size                                                                                                      25,640
    Registers Per Thread                                                   register/thread                             40
    Shared Memory Configuration Size                                                 Kbyte                          32.77
    Driver Shared Memory Per Block                                             Kbyte/block                           1.02
    Dynamic Shared Memory Per Block                                             byte/block                            512
    Static Shared Memory Per Block                                              byte/block                            544
    Threads                                                                         thread                      3,281,920
    Waves Per SM                                                                                                    26.06
    ---------------------------------------------------------------------- --------------- ------------------------------

    Section: Occupancy
    ---------------------------------------------------------------------- --------------- ------------------------------
    Block Limit SM                                                                   block                             16
    Block Limit Registers                                                            block                             12
    Block Limit Shared Mem                                                           block                             47
    Block Limit Warps                                                                block                             12
    Theoretical Active Warps per SM                                                   warp                             48
    Theoretical Occupancy                                                                %                            100
    Achieved Occupancy                                                                   %                          96.48
    Achieved Active Warps Per SM                                                      warp                          46.31
    ---------------------------------------------------------------------- --------------- ------------------------------
    INF   This kernel's theoretical occupancy is not impacted by any block limit.                                       

    Section: Source Counters
    ---------------------------------------------------------------------- --------------- ------------------------------
    Branch Instructions Ratio                                                            %                           0.23
    Branch Instructions                                                               inst                     28,138,970
    Branch Efficiency                                                                    %                            100
    Avg. Divergent Branches                                                                                             0
    ---------------------------------------------------------------------- --------------- ------------------------------
    WRN   This kernel has uncoalesced shared accesses resulting in a total of 3643280 excessive wavefronts (24% of the  
          total 15028530 wavefronts). Check the L1 Wavefronts Shared Excessive table for the primary source locations.  
          The CUDA Best Practices Guide                                                                                 
           (https://docs.nvidia.com/cuda/cuda-c-best-practices-guide/index.html#shared-memory-in-matrix-multiplication-c
          -aa) has an example on optimizing shared memory accesses.                                                     

